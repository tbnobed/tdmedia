# Nginx configuration for TBN Media Application
# Optimized for large file uploads and media streaming

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

# Optimize for file uploads and concurrent connections
events {
    worker_connections 4096;
    use epoll;
    multi_accept on;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logging format
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';

    access_log /var/log/nginx/access.log main;

    # Basic settings for performance
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    server_tokens off;

    # Critical settings for large file uploads
    client_max_body_size 0;  # Remove file size limit completely
    client_body_timeout 300s;  # 5 minutes for body read
    client_header_timeout 60s;
    client_body_temp_path /var/cache/nginx/client_temp;
    client_body_buffer_size 128k;
    client_body_in_file_only clean;
    client_body_in_single_buffer off;

    # Proxy settings for large uploads
    proxy_request_buffering off;  # Stream uploads directly to backend
    proxy_max_temp_file_size 0;   # Disable temp file creation
    proxy_buffering off;          # Disable response buffering for streaming
    proxy_connect_timeout 60s;
    proxy_send_timeout 300s;      # 5 minutes for upload timeout
    proxy_read_timeout 300s;      # 5 minutes for response timeout
    proxy_temp_path /var/cache/nginx/proxy_temp;

    # Gzip compression (exclude videos)
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;
    gzip_disable "msie6";

    # Rate limiting for API endpoints (but not for uploads)
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=auth:10m rate=5r/s;

    # Upstream backend configuration
    upstream backend {
        server app:5000 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    server {
        listen 80;
        server_name _;

        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;

        # Root directory
        root /var/www/html;
        index index.html;

        # Handle preflight OPTIONS requests
        location / {
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS';
                add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization';
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain; charset=utf-8';
                add_header 'Content-Length' 0;
                return 204;
            }

            try_files $uri $uri/ @backend;
        }

        # API routes - proxy to Node.js backend
        location /api/ {
            # Apply rate limiting to most API endpoints
            limit_req zone=api burst=20 nodelay;
            
            proxy_pass http://backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            
            # Important: Don't buffer large uploads
            proxy_request_buffering off;
            proxy_buffering off;
        }

        # Special handling for authentication endpoints
        location ~ ^/api/(login|register|logout) {
            limit_req zone=auth burst=5 nodelay;
            
            proxy_pass http://backend;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # File upload endpoints - no rate limiting, optimized for large files
        location ~ ^/api/(upload|media/.*/upload) {
            # Remove all size and rate limits for uploads
            client_max_body_size 0;
            proxy_request_buffering off;
            proxy_buffering off;
            proxy_read_timeout 1800s;  # 30 minutes for very large uploads
            proxy_send_timeout 1800s;
            
            proxy_pass http://backend;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Upload-Size $content_length;
        }

        # Media streaming endpoints - optimized for range requests
        location ~ ^/api/(raw-stream|stream)/ {
            proxy_pass http://backend;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Range $http_range;
            
            # Enable range requests for video streaming
            proxy_set_header Accept-Ranges bytes;
            proxy_cache_bypass $http_range;
            
            # Don't buffer streaming responses
            proxy_buffering off;
            proxy_request_buffering off;
        }

        # Serve uploaded files directly from nginx for better performance
        location /uploads/ {
            alias /app/uploads/;
            
            # Enable range requests for video playback
            location ~* \.(mp4|webm|ogg|avi|mov|wmv|flv|m4v)$ {
                add_header Accept-Ranges bytes;
                add_header Cache-Control "public, max-age=3600";
            }
            
            # Cache static assets
            location ~* \.(jpg|jpeg|png|gif|ico|css|js)$ {
                expires 7d;
                add_header Cache-Control "public, immutable";
            }
            
            # Security: prevent execution of uploaded files
            location ~* \.(php|jsp|asp|sh|cgi)$ {
                deny all;
            }
        }

        # Fallback to backend for any unmatched routes
        location @backend {
            proxy_pass http://backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
        }

        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # Error pages
        error_page 413 @413_json;
        location @413_json {
            return 413 '{"error": "File too large"}';
            add_header Content-Type application/json;
        }

        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }
}