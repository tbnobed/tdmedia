services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "${PORT:-5000}:5000"
    depends_on:
      postgres:
        condition: service_healthy
    # Add DNS configuration for better network resolution
    dns:
      - 8.8.8.8
      - 8.8.4.4
    environment:
      # Database configuration
      - DATABASE_URL=postgresql://${POSTGRES_USER:-trilogy_user}:${POSTGRES_PASSWORD:-postgres}@postgres:5432/${POSTGRES_DB:-trilogy_db}
      
      # Application configuration
      - NODE_ENV=${NODE_ENV:-production}
      - DOCKER_ENV=true  # Explicitly mark as Docker environment
      - PORT=5000
      - HOST=0.0.0.0  # Ensure the app binds to all network interfaces
      - SESSION_SECRET=${SESSION_SECRET:-trilogy_session_secret}
      - CORS_ALLOWED_ORIGINS=${CORS_ALLOWED_ORIGINS:-*}
      
      # Admin user configuration
      - ADMIN_EMAIL=${ADMIN_EMAIL:-admin@example.com}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD:-adminpassword}
      - ADMIN_USERNAME=${ADMIN_USERNAME:-admin}
      
      # Client user configuration
      - CLIENT_EMAIL=${CLIENT_EMAIL:-client@example.com}
      - CLIENT_PASSWORD=${CLIENT_PASSWORD:-demopassword}
      - CLIENT_USERNAME=${CLIENT_USERNAME:-client}
      
      # Database client configuration
      - USE_NEON_CLIENT=false  # Force using standard pg client instead of Neon
      
      # Email configuration
      - SENDGRID_API_KEY=${SENDGRID_API_KEY:-}
      
      # Large file upload configuration
      - NODE_MAX_HTTP_HEADER_SIZE=81920
      - UV_THREADPOOL_SIZE=32
      - NODE_OPTIONS=--max-old-space-size=4096
      - NODE_TIMEOUT=1800000
    volumes:
      - upload_videos:/app/uploads/videos
      - upload_images:/app/uploads/images
      - upload_documents:/app/uploads/documents
      - upload_presentations:/app/uploads/presentations
      - upload_thumbnails:/app/uploads/thumbnails
      - /tmp/uploads:/tmp/uploads
    restart: unless-stopped
    networks:
      - trilogy_network
    # Configure container limits for better performance
    # Using deploy resources only when supported by the Docker environment
    deploy:
      resources:
        limits:
          memory: 4G
        reservations:
          memory: 1G
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:5000/api/healthcheck"]
      interval: 30s
      timeout: 30s
      retries: 5
      start_period: 60s

  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-trilogy_user}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - POSTGRES_DB=${POSTGRES_DB:-trilogy_db}
    volumes:
      - db_data:/var/lib/postgresql/data
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-trilogy_user} -d ${POSTGRES_DB:-trilogy_db}"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - trilogy_network

networks:
  trilogy_network:
    driver: bridge
    # Explicitly set DNS for external connectivity
    driver_opts:
      com.docker.network.bridge.host_binding_ipv4: "0.0.0.0"
      com.docker.network.bridge.enable_icc: "true"
      com.docker.network.bridge.enable_ip_masquerade: "true"
    # Add DNS configuration to improve external connectivity
    ipam:
      config:
        - subnet: 172.18.0.0/16
          gateway: 172.18.0.1

volumes:
  db_data:
    name: trilogy_db_data
  upload_videos:
    name: trilogy_upload_videos
  upload_images:
    name: trilogy_upload_images
  upload_documents:
    name: trilogy_upload_documents
  upload_presentations:
    name: trilogy_upload_presentations
  upload_thumbnails:
    name: trilogy_upload_thumbnails