postgres-1  | 2025-05-05 23:02:22.092 UTC [1] LOG:  database system is ready to accept connections
app-1       | + echo 'Waiting for PostgreSQL to become available...'
app-1       | + RETRIES=30
app-1       | + pg_isready -h postgres -U trilogy_user -d trilogy_db
app-1       | Waiting for PostgreSQL to become available...
app-1       | postgres:5432 - accepting connections
app-1       | + '[' 30 -eq 0 ]
app-1       | + echo 'PostgreSQL is ready!'
app-1       | + echo 'Initializing database schema...'
app-1       | + npm run db:push
app-1       | PostgreSQL is ready!
app-1       | Initializing database schema...
app-1       |
app-1       | > rest-express@1.0.0 db:push
app-1       | > drizzle-kit push --force --config=./drizzle.config.ts
app-1       |
app-1       | Reading config file '/app/drizzle.config.ts'
app-1       | Using 'pg' driver for database querying
app-1       | [⣷] Pulling schema from database...
[✓] Pulling schema from database...
app-1       |
app-1       |  Warning  You are about to execute current statements:
app-1       |
app-1       | CREATE TYPE "public"."media_type" AS ENUM('video', 'document', 'image', 'presentation');
app-1       | CREATE TABLE IF NOT EXISTS "categories" (
app-1       |   "id" serial PRIMARY KEY NOT NULL,
app-1       |   "name" text NOT NULL,
app-1       |   "description" text,
app-1       |   "created_at" timestamp DEFAULT now() NOT NULL,
app-1       |   CONSTRAINT "categories_name_unique" UNIQUE("name")
app-1       | );
app-1       |
app-1       | CREATE TABLE IF NOT EXISTS "contacts" (
app-1       |   "id" serial PRIMARY KEY NOT NULL,
app-1       |   "name" text NOT NULL,
app-1       |   "email" text NOT NULL,
app-1       |   "company" text,
app-1       |   "message" text NOT NULL,
app-1       |   "media_id" integer,
app-1       |   "created_at" timestamp DEFAULT now() NOT NULL,
app-1       |   "is_read" boolean DEFAULT false NOT NULL
app-1       | );
app-1       |
app-1       | CREATE TABLE IF NOT EXISTS "media" (
app-1       |   "id" serial PRIMARY KEY NOT NULL,
app-1       |   "title" text NOT NULL,
app-1       |   "description" text,
app-1       |   "type" "media_type" NOT NULL,
app-1       |   "category_id" integer NOT NULL,
app-1       |   "file_url" text NOT NULL,
app-1       |   "thumbnail_url" text,
app-1       |   "duration" text,
app-1       |   "size" text,
app-1       |   "created_at" timestamp DEFAULT now() NOT NULL,
app-1       |   "updated_at" timestamp DEFAULT now() NOT NULL
app-1       | );
app-1       |
app-1       | CREATE TABLE IF NOT EXISTS "users" (
app-1       |   "id" serial PRIMARY KEY NOT NULL,
app-1       |   "username" text NOT NULL,
app-1       |   "email" text NOT NULL,
app-1       |   "password" text NOT NULL,
app-1       |   "is_admin" boolean DEFAULT false NOT NULL,
app-1       |   "created_at" timestamp DEFAULT now() NOT NULL,
app-1       |   CONSTRAINT "users_username_unique" UNIQUE("username"),
app-1       |   CONSTRAINT "users_email_unique" UNIQUE("email")
app-1       | );
app-1       |
app-1       | DO $$ BEGIN
app-1       |  ALTER TABLE "contacts" ADD CONSTRAINT "contacts_media_id_media_id_fk" FOREIGN KEY ("media_id") REFERENCES "public"."media"("id") ON DELETE no action ON UPDATE no action;
app-1       | EXCEPTION
app-1       |  WHEN duplicate_object THEN null;
app-1       | END $$;
app-1       |
app-1       | DO $$ BEGIN
app-1       |  ALTER TABLE "media" ADD CONSTRAINT "media_category_id_categories_id_fk" FOREIGN KEY ("category_id") REFERENCES "public"."categories"("id") ON DELETE no action ON UPDATE no action;
app-1       | EXCEPTION
app-1       |  WHEN duplicate_object THEN null;
app-1       | END $$;
app-1       |
app-1       |
app-1       | [✓] Changes applied
app-1       | Database schema initialized successfully!
app-1       | Setting up default users...
app-1       | + echo 'Database schema initialized successfully!'
app-1       | + echo 'Setting up default users...'
app-1       | + chmod +x docker-setup-users.cjs
app-1       | + node docker-setup-users.cjs
app-1       | Checking for admin user...
app-1       | Creating admin user...
app-1       | Admin user created successfully
app-1       | Checking for client user...
app-1       | Creating client user...
app-1       | Client user created successfully
app-1       | User setup completed successfully
app-1       | Examining the build directory structure...
app-1       | + echo 'Examining the build directory structure...'
app-1       | + find dist/ -type f
app-1       | + sort
app-1       | dist/index.js
app-1       | dist/public/assets/index-BJ3X1Bhi.css
app-1       | dist/public/assets/index-VIxj17i-.js
app-1       | dist/public/assets/index.css
app-1       | dist/public/assets/index.js
app-1       | dist/public/assets/manifest.json
app-1       | dist/public/assets/trilogy-logo-Caz0jPUL.svg
app-1       | dist/public/config.js
app-1       | dist/public/docker-config.js
app-1       | dist/public/index.html
app-1       | + echo 'Generating dynamic config.js...'
app-1       | Generating dynamic config.js...
app-1       | + cat
app-1       | + mkdir -p dist/public/assets
app-1       | + echo 'Checking compiled client assets...'
app-1       | + '[' -d dist/client/assets ]
app-1       | + echo 'Found compiled client assets:'
app-1       | Checking compiled client assets...
app-1       | Found compiled client assets:
app-1       | + ls -la dist/client/assets/
app-1       | total 8
app-1       | drwxr-xr-x    2 root     root          4096 May  5 23:02 .
app-1       | drwxr-xr-x    3 root     root          4096 May  5 23:02 ..
app-1       | + echo 'Copying compiled assets to public assets directory...'
app-1       | Copying compiled assets to public assets directory...
app-1       | + cp -r 'dist/client/assets/*' dist/public/assets/
app-1       | cp: can't stat 'dist/client/assets/*': No such file or directory
app-1       | Waiting for PostgreSQL to become available...
app-1       | + echo 'Waiting for PostgreSQL to become available...'
app-1       | + RETRIES=30
app-1       | + pg_isready -h postgres -U trilogy_user -d trilogy_db
app-1       | postgres:5432 - accepting connections
app-1       | + '[' 30 -eq 0 ]
app-1       | + echo 'PostgreSQL is ready!'
app-1       | + echo 'Initializing database schema...'
app-1       | + npm run db:push
app-1       | PostgreSQL is ready!
app-1       | Initializing database schema...
app-1       |
app-1       | > rest-express@1.0.0 db:push
app-1       | > drizzle-kit push --force --config=./drizzle.config.ts
app-1       |
app-1       | Reading config file '/app/drizzle.config.ts'
app-1       | Using 'pg' driver for database querying
app-1       | [⣷] Pulling schema from database...
[⣯] Pulling schema from database...
[⣟] Pulling schema from database...
[✓] Pulling schema from database...
app-1       | [i] No changes detected
app-1       | + echo 'Database schema initialized successfully!'
app-1       | + echo 'Setting up default users...'
app-1       | Database schema initialized successfully!
app-1       | Setting up default users...
app-1       | + chmod +x docker-setup-users.cjs
app-1       | + node docker-setup-users.cjs
app-1       | Checking for admin user...
app-1       | Admin user already exists
app-1       | Checking for client user...
app-1       | Client user already exists
app-1       | User setup completed successfully
app-1       | + echo 'Examining the build directory structure...'
app-1       | Examining the build directory structure...
app-1       | + find dist/ -type f
app-1       | + sort
app-1       | dist/index.js
app-1       | dist/public/assets/index-BJ3X1Bhi.css
app-1       | dist/public/assets/index-VIxj17i-.js
app-1       | dist/public/assets/index.css
app-1       | dist/public/assets/index.js
app-1       | dist/public/assets/manifest.json
app-1       | dist/public/assets/trilogy-logo-Caz0jPUL.svg
app-1       | dist/public/config.js
app-1       | dist/public/docker-config.js
app-1       | dist/public/index.html
app-1       | + echo 'Generating dynamic config.js...'
app-1       | Generating dynamic config.js...
app-1       | + cat
app-1       | + mkdir -p dist/public/assets
app-1       | + echo 'Checking compiled client assets...'
app-1       | Checking compiled client assets...
app-1       | + '[' -d dist/client/assets ]
app-1       | + echo 'Found compiled client assets:'
app-1       | Found compiled client assets:
app-1       | + ls -la dist/client/assets/
app-1       | total 8
app-1       | drwxr-xr-x    2 root     root          4096 May  5 23:02 .
app-1       | drwxr-xr-x    3 root     root          4096 May  5 23:02 ..
app-1       | + echo 'Copying compiled assets to public assets directory...'
app-1       | + cp -r 'dist/client/assets/*' dist/public/assets/
app-1       | Copying compiled assets to public assets directory...
app-1       | cp: can't stat 'dist/client/assets/*': No such file or directory
app-1       | + echo 'Waiting for PostgreSQL to become available...'
app-1       | + RETRIES=30
app-1       | + pg_isready -h postgres -U trilogy_user -d trilogy_db
app-1       | Waiting for PostgreSQL to become available...
app-1       | postgres:5432 - accepting connections
app-1       | + '[' 30 -eq 0 ]
app-1       | + echo 'PostgreSQL is ready!'
app-1       | + echo 'Initializing database schema...'
app-1       | + npm run db:push
app-1       | PostgreSQL is ready!
app-1       | Initializing database schema...
app-1       |
app-1       | > rest-express@1.0.0 db:push
app-1       | > drizzle-kit push --force --config=./drizzle.config.ts
app-1       |
app-1       | Reading config file '/app/drizzle.config.ts'
app-1       | Using 'pg' driver for database querying
app-1       | [⣷] Pulling schema from database...
[⣯] Pulling schema from database...
[⣟] Pulling schema from database...
[✓] Pulling schema from database...
app-1       | [i] No changes detected
app-1       | Database schema initialized successfully!
app-1       | Setting up default users...
app-1       | + echo 'Database schema initialized successfully!'
app-1       | + echo 'Setting up default users...'
app-1       | + chmod +x docker-setup-users.cjs
app-1       | + node docker-setup-users.cjs
app-1       | Checking for admin user...
app-1       | Admin user already exists
app-1       | Checking for client user...
app-1       | Client user already exists
app-1       | User setup completed successfully
app-1       | Examining the build directory structure...
app-1       | + echo 'Examining the build directory structure...'
app-1       | + find dist/ -type f
app-1       | + sort
app-1       | dist/index.js
app-1       | dist/public/assets/index-BJ3X1Bhi.css
app-1       | dist/public/assets/index-VIxj17i-.js
app-1       | dist/public/assets/index.css
app-1       | dist/public/assets/index.js
app-1       | dist/public/assets/manifest.json
app-1       | dist/public/assets/trilogy-logo-Caz0jPUL.svg
app-1       | dist/public/config.js
app-1       | dist/public/docker-config.js
app-1       | dist/public/index.html
app-1       | + echo 'Generating dynamic config.js...'
app-1       | Generating dynamic config.js...
app-1       | + cat
app-1       | + mkdir -p dist/public/assets
app-1       | + echo 'Checking compiled client assets...'
app-1       | + '[' -d dist/client/assets ]
app-1       | Checking compiled client assets...
app-1       | Found compiled client assets:
app-1       | + echo 'Found compiled client assets:'
app-1       | + ls -la dist/client/assets/
app-1       | total 8
app-1       | drwxr-xr-x    2 root     root          4096 May  5 23:02 .
app-1       | drwxr-xr-x    3 root     root          4096 May  5 23:02 ..
app-1       | + echo 'Copying compiled assets to public assets directory...'
app-1       | Copying compiled assets to public assets directory...
app-1       | + cp -r 'dist/client/assets/*' dist/public/assets/
app-1       | cp: can't stat 'dist/client/assets/*': No such file or directory
app-1       | Waiting for PostgreSQL to become available...
app-1       | + echo 'Waiting for PostgreSQL to become available...'
app-1       | + RETRIES=30
app-1       | + pg_isready -h postgres -U trilogy_user -d trilogy_db
app-1       | postgres:5432 - accepting connections
app-1       | + '[' 30 -eq 0 ]
app-1       | + echo 'PostgreSQL is ready!'
app-1       | + echo 'Initializing database schema...'
app-1       | PostgreSQL is ready!
app-1       | Initializing database schema...
app-1       | + npm run db:push
app-1       |
app-1       | > rest-express@1.0.0 db:push
app-1       | > drizzle-kit push --force --config=./drizzle.config.ts
app-1       |
app-1       | Reading config file '/app/drizzle.config.ts'
app-1       | Using 'pg' driver for database querying
app-1       | [⣷] Pulling schema from database...
[⣯] Pulling schema from database...
[⣟] Pulling schema from database...
[✓] Pulling schema from database...
app-1       | [i] No changes detected
app-1       | Database schema initialized successfully!
app-1       | Setting up default users...
app-1       | + echo 'Database schema initialized successfully!'
app-1       | + echo 'Setting up default users...'
app-1       | + chmod +x docker-setup-users.cjs
app-1       | + node docker-setup-users.cjs
app-1       | Checking for admin user...
app-1       | Admin user already exists
app-1       | Checking for client user...
app-1       | Client user already exists
app-1       | User setup completed successfully
app-1       | Examining the build directory structure...
app-1       | + echo 'Examining the build directory structure...'
app-1       | + find dist/ -type f
app-1       | + sort
app-1       | dist/index.js
app-1       | dist/public/assets/index-BJ3X1Bhi.css
app-1       | dist/public/assets/index-VIxj17i-.js
app-1       | dist/public/assets/index.css
app-1       | dist/public/assets/index.js
app-1       | dist/public/assets/manifest.json
app-1       | dist/public/assets/trilogy-logo-Caz0jPUL.svg
app-1       | dist/public/config.js
app-1       | dist/public/docker-config.js
app-1       | dist/public/index.html
app-1       | Generating dynamic config.js...
app-1       | + echo 'Generating dynamic config.js...'
app-1       | + cat
app-1       | + mkdir -p dist/public/assets
app-1       | + echo 'Checking compiled client assets...'
app-1       | Checking compiled client assets...
app-1       | + '[' -d dist/client/assets ]
app-1       | Found compiled client assets:
app-1       | + echo 'Found compiled client assets:'
app-1       | + ls -la dist/client/assets/
app-1       | total 8
app-1       | drwxr-xr-x    2 root     root          4096 May  5 23:02 .
app-1       | drwxr-xr-x    3 root     root          4096 May  5 23:02 ..
app-1       | Copying compiled assets to public assets directory...
app-1       | + echo 'Copying compiled assets to public assets directory...'
app-1       | + cp -r 'dist/client/assets/*' dist/public/assets/
app-1       | cp: can't stat 'dist/client/assets/*': No such file or directory
app-1       | + echo 'Waiting for PostgreSQL to become available...'
app-1       | + RETRIES=30
app-1       | + pg_isready -h postgres -U trilogy_user -d trilogy_db
app-1       | Waiting for PostgreSQL to become available...
app-1       | postgres:5432 - accepting connections
app-1       | + '[' 30 -eq 0 ]
app-1       | + echo 'PostgreSQL is ready!'
app-1       | + echo 'Initializing database schema...'
app-1       | + npm run db:push
app-1       | PostgreSQL is ready!
app-1       | Initializing database schema...
app-1       |
app-1       | > rest-express@1.0.0 db:push
app-1       | > drizzle-kit push --force --config=./drizzle.config.ts
app-1       |
app-1       | Reading config file '/app/drizzle.config.ts'
app-1       | Using 'pg' driver for database querying
app-1       | [⣷] Pulling schema from database...
[⣯] Pulling schema from database...
[⣟] Pulling schema from database...
[✓] Pulling schema from database...
app-1       | [i] No changes detected
app-1       | + echo 'Database schema initialized successfully!'
app-1       | + echo 'Setting up default users...'
app-1       | + chmod +x docker-setup-users.cjs
app-1       | Database schema initialized successfully!
app-1       | Setting up default users...
app-1       | + node docker-setup-users.cjs
app-1       | Checking for admin user...
app-1       | Admin user already exists
app-1       | Checking for client user...
app-1       | Client user already exists
app-1       | User setup completed successfully
app-1       | + echo 'Examining the build directory structure...'
app-1       | Examining the build directory structure...
app-1       | + find dist/ -type f
app-1       | + sort
app-1       | dist/index.js
app-1       | dist/public/assets/index-BJ3X1Bhi.css
app-1       | dist/public/assets/index-VIxj17i-.js
app-1       | dist/public/assets/index.css
app-1       | dist/public/assets/index.js
app-1       | dist/public/assets/manifest.json
app-1       | dist/public/assets/trilogy-logo-Caz0jPUL.svg
app-1       | dist/public/config.js
app-1       | dist/public/docker-config.js
app-1       | dist/public/index.html
app-1       | Generating dynamic config.js...
app-1       | + echo 'Generating dynamic config.js...'
app-1       | + cat
app-1       | + mkdir -p dist/public/assets
app-1       | Checking compiled client assets...
app-1       | Found compiled client assets:
app-1       | + echo 'Checking compiled client assets...'
app-1       | + '[' -d dist/client/assets ]
app-1       | + echo 'Found compiled client assets:'
app-1       | + ls -la dist/client/assets/
app-1       | total 8
app-1       | drwxr-xr-x    2 root     root          4096 May  5 23:02 .
app-1       | drwxr-xr-x    3 root     root          4096 May  5 23:02 ..
app-1       | + echo 'Copying compiled assets to public assets directory...'
app-1       | + cp -r 'dist/client/assets/*' dist/public/assets/
app-1       | Copying compiled assets to public assets directory...
app-1       | cp: can't stat 'dist/client/assets/*': No such file or directory
app-1       | Waiting for PostgreSQL to become available...
app-1       | + echo 'Waiting for PostgreSQL to become available...'
app-1       | + RETRIES=30
app-1       | + pg_isready -h postgres -U trilogy_user -d trilogy_db
app-1       | postgres:5432 - accepting connections
app-1       | + '[' 30 -eq 0 ]
app-1       | + echo 'PostgreSQL is ready!'
app-1       | + echo 'Initializing database schema...'
app-1       | PostgreSQL is ready!
app-1       | Initializing database schema...
app-1       | + npm run db:push
app-1       |
app-1       | > rest-express@1.0.0 db:push
app-1       | > drizzle-kit push --force --config=./drizzle.config.ts
app-1       |
app-1       | Reading config file '/app/drizzle.config.ts'
app-1       | Using 'pg' driver for database querying
app-1       | [⣷] Pulling schema from database...
[⣯] Pulling schema from database...
[⣟] Pulling schema from database...
[✓] Pulling schema from database...
app-1       | [i] No changes detected
app-1       | + echo 'Database schema initialized successfully!'
app-1       | + echo 'Setting up default users...'
app-1       | + chmod +x docker-setup-users.cjs
app-1       | Database schema initialized successfully!
app-1       | Setting up default users...
app-1       | + node docker-setup-users.cjs
app-1       | Checking for admin user...
app-1       | Admin user already exists
app-1       | Checking for client user...
app-1       | Client user already exists
app-1       | User setup completed successfully
app-1       | Examining the build directory structure...
app-1       | + echo 'Examining the build directory structure...'
app-1       | + find dist/ -type f
app-1       | + sort
app-1       | dist/index.js
app-1       | dist/public/assets/index-BJ3X1Bhi.css
app-1       | dist/public/assets/index-VIxj17i-.js
app-1       | dist/public/assets/index.css
app-1       | dist/public/assets/index.js
app-1       | dist/public/assets/manifest.json
app-1       | dist/public/assets/trilogy-logo-Caz0jPUL.svg
app-1       | dist/public/config.js
app-1       | dist/public/docker-config.js
app-1       | dist/public/index.html
app-1       | + echo 'Generating dynamic config.js...'
app-1       | Generating dynamic config.js...
app-1       | + cat
app-1       | + mkdir -p dist/public/assets
app-1       | + echo 'Checking compiled client assets...'
app-1       | Checking compiled client assets...
app-1       | + '[' -d dist/client/assets ]
app-1       | Found compiled client assets:
app-1       | + echo 'Found compiled client assets:'
app-1       | + ls -la dist/client/assets/
app-1       | total 8
app-1       | drwxr-xr-x    2 root     root          4096 May  5 23:02 .
app-1       | drwxr-xr-x    3 root     root          4096 May  5 23:02 ..
app-1       | + echo 'Copying compiled assets to public assets directory...'
app-1       | Copying compiled assets to public assets directory...
app-1       | + cp -r 'dist/client/assets/*' dist/public/assets/
app-1       | cp: can't stat 'dist/client/assets/*': No such file or directory
obtv-admin@dev-tdmedia:~/tdmedia$
