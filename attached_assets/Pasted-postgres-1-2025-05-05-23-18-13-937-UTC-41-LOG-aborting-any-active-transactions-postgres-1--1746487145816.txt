postgres-1  | 2025-05-05 23:18:13.937 UTC [41] LOG:  aborting any active transactions
postgres-1  | 2025-05-05 23:18:13.940 UTC [41] LOG:  background worker "logical replication launcher" (PID 47) exited with exit code 1
postgres-1  | 2025-05-05 23:18:13.941 UTC [42] LOG:  shutting down
postgres-1  | 2025-05-05 23:18:13.942 UTC [42] LOG:  checkpoint starting: shutdown immediate
postgres-1  | 2025-05-05 23:18:14.013 UTC [42] LOG:  checkpoint complete: wrote 920 buffers (5.6%); 0 WAL file(s) added, 0 removed, 0 recycled; write=0.040 s, sync=0.027 s, total=0.072 s; sync files=301, longest=0.002 s, average=0.001 s; distance=4233 kB, estimate=4233 kB
postgres-1  | 2025-05-05 23:18:14.021 UTC [41] LOG:  database system is shut down
app-1       |   CONSTRAINT "categories_name_unique" UNIQUE("name")
app-1       | );
app-1       |
app-1       | CREATE TABLE IF NOT EXISTS "contacts" (
app-1       |   "id" serial PRIMARY KEY NOT NULL,
app-1       |   "name" text NOT NULL,
app-1       |   "email" text NOT NULL,
app-1       |   "company" text,
postgres-1  |  done
postgres-1  | server stopped
postgres-1  |
postgres-1  | PostgreSQL init process complete; ready for start up.
postgres-1  |
postgres-1  | 2025-05-05 23:18:14.070 UTC [1] LOG:  starting PostgreSQL 15.12 on x86_64-pc-linux-musl, compiled by gcc (Alpine 14.2.0) 14.2.0, 64-bit
app-1       |   "message" text NOT NULL,
app-1       |   "media_id" integer,
postgres-1  | 2025-05-05 23:18:14.070 UTC [1] LOG:  listening on IPv4 address "0.0.0.0", port 5432
postgres-1  | 2025-05-05 23:18:14.070 UTC [1] LOG:  listening on IPv6 address "::", port 5432
postgres-1  | 2025-05-05 23:18:14.072 UTC [1] LOG:  listening on Unix socket "/var/run/postgresql/.s.PGSQL.5432"
postgres-1  | 2025-05-05 23:18:14.076 UTC [57] LOG:  database system was shut down at 2025-05-05 23:18:14 UTC
postgres-1  | 2025-05-05 23:18:14.083 UTC [1] LOG:  database system is ready to accept connections
app-1       |   "created_at" timestamp DEFAULT now() NOT NULL,
app-1       |   "is_read" boolean DEFAULT false NOT NULL
app-1       | );
app-1       |
app-1       | CREATE TABLE IF NOT EXISTS "media" (
app-1       |   "id" serial PRIMARY KEY NOT NULL,
app-1       |   "title" text NOT NULL,
app-1       |   "description" text,
app-1       |   "type" "media_type" NOT NULL,
app-1       |   "category_id" integer NOT NULL,
app-1       |   "file_url" text NOT NULL,
app-1       |   "thumbnail_url" text,
app-1       |   "duration" text,
app-1       |   "size" text,
app-1       |   "created_at" timestamp DEFAULT now() NOT NULL,
app-1       |   "updated_at" timestamp DEFAULT now() NOT NULL
app-1       | );
app-1       |
app-1       | CREATE TABLE IF NOT EXISTS "users" (
app-1       |   "id" serial PRIMARY KEY NOT NULL,
app-1       |   "username" text NOT NULL,
app-1       |   "email" text NOT NULL,
app-1       |   "password" text NOT NULL,
app-1       |   "is_admin" boolean DEFAULT false NOT NULL,
app-1       |   "created_at" timestamp DEFAULT now() NOT NULL,
app-1       |   CONSTRAINT "users_username_unique" UNIQUE("username"),
app-1       |   CONSTRAINT "users_email_unique" UNIQUE("email")
app-1       | );
app-1       |
app-1       | DO $$ BEGIN
app-1       |  ALTER TABLE "contacts" ADD CONSTRAINT "contacts_media_id_media_id_fk" FOREIGN KEY ("media_id") REFERENCES "public"."media"("id") ON DELETE no action ON UPDATE no action;
app-1       | EXCEPTION
app-1       |  WHEN duplicate_object THEN null;
app-1       | END $$;
app-1       |
app-1       | DO $$ BEGIN
app-1       |  ALTER TABLE "media" ADD CONSTRAINT "media_category_id_categories_id_fk" FOREIGN KEY ("category_id") REFERENCES "public"."categories"("id") ON DELETE no action ON UPDATE no action;
app-1       | EXCEPTION
app-1       |  WHEN duplicate_object THEN null;
app-1       | END $$;
app-1       |
app-1       |
app-1       | [✓] Changes applied
app-1       | + echo 'Database schema initialized successfully!'
app-1       | + echo 'Setting up default users...'
app-1       | + chmod +x docker-setup-users.cjs
app-1       | Database schema initialized successfully!
app-1       | Setting up default users...
app-1       | + node docker-setup-users.cjs
app-1       | Checking for admin user...
app-1       | Creating admin user...
app-1       | Admin user created successfully
app-1       | Checking for client user...
app-1       | Creating client user...
app-1       | Client user created successfully
app-1       | User setup completed successfully
app-1       | + echo 'Examining the build directory structure...'
app-1       | Examining the build directory structure...
app-1       | + find dist/ -type f
app-1       | + sort
app-1       | dist/index.js
app-1       | dist/public/assets/index-BJ3X1Bhi.css
app-1       | dist/public/assets/index-Bnok1YQN.js
app-1       | dist/public/assets/index.css
app-1       | dist/public/assets/index.js
app-1       | dist/public/assets/manifest.json
app-1       | dist/public/assets/trilogy-logo-Caz0jPUL.svg
app-1       | dist/public/config.js
app-1       | dist/public/docker-config.js
app-1       | dist/public/index.html
app-1       | + echo 'Generating dynamic config.js...'
app-1       | Generating dynamic config.js...
app-1       | + cat
app-1       | + mkdir -p dist/public/assets
app-1       | + echo 'Checking for compiled client assets...'
app-1       | + mkdir -p dist/public/assets
app-1       | Checking for compiled client assets...
app-1       | + echo 'Creating asset manifest...'
app-1       | Creating asset manifest...
app-1       | Looking for assets throughout the dist directory...
app-1       | + echo '{"assets":['
app-1       | + FOUND_ASSETS=0
app-1       | + echo 'Looking for assets throughout the dist directory...'
app-1       | + find dist -name '*.js' -o -name '*.css'
app-1       | + grep -v node_modules
app-1       | + grep -q '[a-zA-Z0-9]\-[a-zA-Z0-9]\+\.'
app-1       | + echo 'Found Vite-generated assets with hash names'
app-1       | + FOUND_ASSETS=1
app-1       | Found Vite-generated assets with hash names
app-1       | + find dist -name '*.js' -o -name '*.css'
app-1       | + grep -v node_modules
app-1       | + grep '[a-zA-Z0-9]\-[a-zA-Z0-9]\+\.'
app-1       | + basename dist/public/assets/index-Bnok1YQN.js
app-1       | Copying dist/public/assets/index-Bnok1YQN.js to dist/public/assets/
app-1       | + FILENAME=index-Bnok1YQN.js
app-1       | + echo 'Copying dist/public/assets/index-Bnok1YQN.js to dist/public/assets/'
app-1       | + cp -f dist/public/assets/index-Bnok1YQN.js dist/public/assets/index-Bnok1YQN.js
app-1       | cp: 'dist/public/assets/index-Bnok1YQN.js' and 'dist/public/assets/index-Bnok1YQN.js' are the same file
app-1       | Waiting for PostgreSQL to become available...
app-1       | + echo 'Waiting for PostgreSQL to become available...'
app-1       | + RETRIES=30
app-1       | + pg_isready -h postgres -U trilogy_user -d trilogy_db
app-1       | postgres:5432 - accepting connections
app-1       | + '[' 30 -eq 0 ]
app-1       | + echo 'PostgreSQL is ready!'
app-1       | + echo 'Initializing database schema...'
app-1       | + npm run db:push
app-1       | PostgreSQL is ready!
app-1       | Initializing database schema...
app-1       |
app-1       | > rest-express@1.0.0 db:push
app-1       | > drizzle-kit push --force --config=./drizzle.config.ts
app-1       |
app-1       | Reading config file '/app/drizzle.config.ts'
app-1       | Using 'pg' driver for database querying
app-1       | [⣷] Pulling schema from database...
[⣯] Pulling schema from database...
[⣟] Pulling schema from database...
[✓] Pulling schema from database...
app-1       | [i] No changes detected
app-1       | + echo 'Database schema initialized successfully!'
app-1       | + echo 'Setting up default users...'
app-1       | + chmod +x docker-setup-users.cjs
app-1       | Database schema initialized successfully!
app-1       | Setting up default users...
app-1       | + node docker-setup-users.cjs
app-1       | Checking for admin user...
app-1       | Admin user already exists
app-1       | Checking for client user...
app-1       | Client user already exists
app-1       | User setup completed successfully
app-1       | + echo 'Examining the build directory structure...'
app-1       | Examining the build directory structure...
app-1       | + find dist/ -type f
app-1       | + sort
app-1       | dist/index.js
app-1       | dist/public/assets/index-BJ3X1Bhi.css
app-1       | dist/public/assets/index-Bnok1YQN.js
app-1       | dist/public/assets/index.css
app-1       | dist/public/assets/index.js
app-1       | dist/public/assets/manifest.json
app-1       | dist/public/assets/trilogy-logo-Caz0jPUL.svg
app-1       | dist/public/config.js
app-1       | dist/public/docker-config.js
app-1       | dist/public/index.html
app-1       | Generating dynamic config.js...
app-1       | + echo 'Generating dynamic config.js...'
app-1       | + cat
app-1       | + mkdir -p dist/public/assets
app-1       | + echo 'Checking for compiled client assets...'
app-1       | + mkdir -p dist/public/assets
app-1       | Checking for compiled client assets...
app-1       | + echo 'Creating asset manifest...'
app-1       | Creating asset manifest...
app-1       | + echo '{"assets":['
app-1       | Looking for assets throughout the dist directory...
app-1       | + FOUND_ASSETS=0
app-1       | + echo 'Looking for assets throughout the dist directory...'
app-1       | + find dist -name '*.js' -o -name '*.css'
app-1       | + grep -v node_modules
app-1       | + grep -q '[a-zA-Z0-9]\-[a-zA-Z0-9]\+\.'
app-1       | + echo 'Found Vite-generated assets with hash names'
app-1       | Found Vite-generated assets with hash names
app-1       | + FOUND_ASSETS=1
app-1       | + find dist -name '*.js' -o -name '*.css'
app-1       | + grep -v node_modules
app-1       | + grep '[a-zA-Z0-9]\-[a-zA-Z0-9]\+\.'
app-1       | + basename dist/public/assets/index-Bnok1YQN.js
app-1       | Copying dist/public/assets/index-Bnok1YQN.js to dist/public/assets/
app-1       | + FILENAME=index-Bnok1YQN.js
app-1       | + echo 'Copying dist/public/assets/index-Bnok1YQN.js to dist/public/assets/'
app-1       | + cp -f dist/public/assets/index-Bnok1YQN.js dist/public/assets/index-Bnok1YQN.js
app-1       | cp: 'dist/public/assets/index-Bnok1YQN.js' and 'dist/public/assets/index-Bnok1YQN.js' are the same file
app-1       | + echo 'Waiting for PostgreSQL to become available...'
app-1       | + RETRIES=30
app-1       | + pg_isready -h postgres -U trilogy_user -d trilogy_db
app-1       | Waiting for PostgreSQL to become available...
app-1       | postgres:5432 - accepting connections
app-1       | + '[' 30 -eq 0 ]
app-1       | + echo 'PostgreSQL is ready!'
app-1       | PostgreSQL is ready!
app-1       | Initializing database schema...
app-1       | + echo 'Initializing database schema...'
app-1       | + npm run db:push
app-1       |
app-1       | > rest-express@1.0.0 db:push
app-1       | > drizzle-kit push --force --config=./drizzle.config.ts
app-1       |
app-1       | Reading config file '/app/drizzle.config.ts'
app-1       | Using 'pg' driver for database querying
app-1       | [⣷] Pulling schema from database...
[⣯] Pulling schema from database...
[⣟] Pulling schema from database...
[✓] Pulling schema from database...
app-1       | [i] No changes detected
app-1       | Database schema initialized successfully!
app-1       | Setting up default users...
app-1       | + echo 'Database schema initialized successfully!'
app-1       | + echo 'Setting up default users...'
app-1       | + chmod +x docker-setup-users.cjs
app-1       | + node docker-setup-users.cjs
app-1       | Checking for admin user...
app-1       | Admin user already exists
app-1       | Checking for client user...
app-1       | Client user already exists
app-1       | User setup completed successfully
app-1       | Examining the build directory structure...
app-1       | + echo 'Examining the build directory structure...'
app-1       | + find dist/ -type f
app-1       | + sort
app-1       | dist/index.js
app-1       | dist/public/assets/index-BJ3X1Bhi.css
app-1       | dist/public/assets/index-Bnok1YQN.js
app-1       | dist/public/assets/index.css
app-1       | dist/public/assets/index.js
app-1       | dist/public/assets/manifest.json
app-1       | dist/public/assets/trilogy-logo-Caz0jPUL.svg
app-1       | dist/public/config.js
app-1       | dist/public/docker-config.js
app-1       | dist/public/index.html
app-1       | Generating dynamic config.js...
app-1       | + echo 'Generating dynamic config.js...'
app-1       | + cat
app-1       | + mkdir -p dist/public/assets
app-1       | Checking for compiled client assets...
app-1       | + echo 'Checking for compiled client assets...'
app-1       | + mkdir -p dist/public/assets
app-1       | + echo 'Creating asset manifest...'
app-1       | + echo '{"assets":['
app-1       | Creating asset manifest...
app-1       | Looking for assets throughout the dist directory...
app-1       | + FOUND_ASSETS=0
app-1       | + echo 'Looking for assets throughout the dist directory...'
app-1       | + find dist -name '*.js' -o -name '*.css'
app-1       | + grep -v node_modules
app-1       | + grep -q '[a-zA-Z0-9]\-[a-zA-Z0-9]\+\.'
app-1       | Found Vite-generated assets with hash names
app-1       | + echo 'Found Vite-generated assets with hash names'
app-1       | + FOUND_ASSETS=1
app-1       | + find dist -name '*.js' -o -name '*.css'
app-1       | + grep -v node_modules
app-1       | + grep '[a-zA-Z0-9]\-[a-zA-Z0-9]\+\.'
app-1       | + basename dist/public/assets/index-Bnok1YQN.js
app-1       | + FILENAME=index-Bnok1YQN.js
app-1       | + echo 'Copying dist/public/assets/index-Bnok1YQN.js to dist/public/assets/'
app-1       | + cp -f dist/public/assets/index-Bnok1YQN.js dist/public/assets/index-Bnok1YQN.js
app-1       | Copying dist/public/assets/index-Bnok1YQN.js to dist/public/assets/
app-1       | cp: 'dist/public/assets/index-Bnok1YQN.js' and 'dist/public/assets/index-Bnok1YQN.js' are the same file
app-1       | Waiting for PostgreSQL to become available...
app-1       | + echo 'Waiting for PostgreSQL to become available...'
app-1       | + RETRIES=30
app-1       | + pg_isready -h postgres -U trilogy_user -d trilogy_db
app-1       | postgres:5432 - accepting connections
app-1       | + '[' 30 -eq 0 ]
app-1       | + echo 'PostgreSQL is ready!'
app-1       | + echo 'Initializing database schema...'
app-1       | + npm run db:push
app-1       | PostgreSQL is ready!
app-1       | Initializing database schema...
app-1       |
app-1       | > rest-express@1.0.0 db:push
app-1       | > drizzle-kit push --force --config=./drizzle.config.ts
app-1       |
app-1       | Reading config file '/app/drizzle.config.ts'
app-1       | Using 'pg' driver for database querying
app-1       | [⣷] Pulling schema from database...
[⣯] Pulling schema from database...
[⣟] Pulling schema from database...
[✓] Pulling schema from database...
app-1       | [i] No changes detected
app-1       | + echo 'Database schema initialized successfully!'
app-1       | + echo 'Setting up default users...'
app-1       | + chmod +x docker-setup-users.cjs
app-1       | Database schema initialized successfully!
app-1       | Setting up default users...
app-1       | + node docker-setup-users.cjs
app-1       | Checking for admin user...
app-1       | Admin user already exists
app-1       | Checking for client user...
app-1       | Client user already exists
app-1       | User setup completed successfully
app-1       | Examining the build directory structure...
app-1       | + echo 'Examining the build directory structure...'
app-1       | + find dist/ -type f
app-1       | + sort
app-1       | dist/index.js
app-1       | dist/public/assets/index-BJ3X1Bhi.css
app-1       | dist/public/assets/index-Bnok1YQN.js
app-1       | dist/public/assets/index.css
app-1       | dist/public/assets/index.js
app-1       | dist/public/assets/manifest.json
app-1       | dist/public/assets/trilogy-logo-Caz0jPUL.svg
app-1       | dist/public/config.js
app-1       | dist/public/docker-config.js
app-1       | dist/public/index.html
app-1       | + echo 'Generating dynamic config.js...'
app-1       | Generating dynamic config.js...
app-1       | + cat
app-1       | + mkdir -p dist/public/assets
app-1       | + echo 'Checking for compiled client assets...'
app-1       | + mkdir -p dist/public/assets
app-1       | Checking for compiled client assets...
app-1       | + echo 'Creating asset manifest...'
app-1       | + echo '{"assets":['
app-1       | Creating asset manifest...
app-1       | Looking for assets throughout the dist directory...
app-1       | + FOUND_ASSETS=0
app-1       | + echo 'Looking for assets throughout the dist directory...'
app-1       | + find dist -name '*.js' -o -name '*.css'
app-1       | + grep -v node_modules
app-1       | + grep -q '[a-zA-Z0-9]\-[a-zA-Z0-9]\+\.'
app-1       | + echo 'Found Vite-generated assets with hash names'
app-1       | + FOUND_ASSETS=1
app-1       | Found Vite-generated assets with hash names
app-1       | + find dist -name '*.js' -o -name '*.css'
app-1       | + grep -v node_modules
app-1       | + grep '[a-zA-Z0-9]\-[a-zA-Z0-9]\+\.'
app-1       | + basename dist/public/assets/index-Bnok1YQN.js
app-1       | + FILENAME=index-Bnok1YQN.js
app-1       | + echo 'Copying dist/public/assets/index-Bnok1YQN.js to dist/public/assets/'
app-1       | + cp -f dist/public/assets/index-Bnok1YQN.js dist/public/assets/index-Bnok1YQN.js
app-1       | Copying dist/public/assets/index-Bnok1YQN.js to dist/public/assets/
app-1       | cp: 'dist/public/assets/index-Bnok1YQN.js' and 'dist/public/assets/index-Bnok1YQN.js' are the same file
app-1       | + echo 'Waiting for PostgreSQL to become available...'
app-1       | Waiting for PostgreSQL to become available...
app-1       | + RETRIES=30
app-1       | + pg_isready -h postgres -U trilogy_user -d trilogy_db
app-1       | postgres:5432 - accepting connections
app-1       | + '[' 30 -eq 0 ]
app-1       | + echo 'PostgreSQL is ready!'
app-1       | + echo 'Initializing database schema...'
app-1       | + npm run db:push
app-1       | PostgreSQL is ready!
app-1       | Initializing database schema...
app-1       |
app-1       | > rest-express@1.0.0 db:push
app-1       | > drizzle-kit push --force --config=./drizzle.config.ts
app-1       |
app-1       | Reading config file '/app/drizzle.config.ts'
app-1       | Using 'pg' driver for database querying
app-1       | [⣷] Pulling schema from database...
[⣯] Pulling schema from database...
[⣟] Pulling schema from database...
[⡿] Pulling schema from database...
[✓] Pulling schema from database...
app-1       | [i] No changes detected
app-1       | + echo 'Database schema initialized successfully!'
app-1       | + echo 'Setting up default users...'
app-1       | + chmod +x docker-setup-users.cjs
app-1       | Database schema initialized successfully!
app-1       | Setting up default users...
app-1       | + node docker-setup-users.cjs
app-1       | Checking for admin user...
app-1       | Admin user already exists
app-1       | Checking for client user...
app-1       | Client user already exists
app-1       | User setup completed successfully
app-1       | + echo 'Examining the build directory structure...'
app-1       | Examining the build directory structure...
app-1       | + find dist/ -type f
app-1       | + sort
app-1       | dist/index.js
app-1       | dist/public/assets/index-BJ3X1Bhi.css
app-1       | dist/public/assets/index-Bnok1YQN.js
app-1       | dist/public/assets/index.css
app-1       | dist/public/assets/index.js
app-1       | dist/public/assets/manifest.json
app-1       | dist/public/assets/trilogy-logo-Caz0jPUL.svg
app-1       | dist/public/config.js
app-1       | dist/public/docker-config.js
app-1       | dist/public/index.html
app-1       | Generating dynamic config.js...
app-1       | + echo 'Generating dynamic config.js...'
app-1       | + cat
app-1       | + mkdir -p dist/public/assets
app-1       | Checking for compiled client assets...
app-1       | + echo 'Checking for compiled client assets...'
app-1       | + mkdir -p dist/public/assets
app-1       | Creating asset manifest...
app-1       | + echo 'Creating asset manifest...'
app-1       | + echo '{"assets":['
app-1       | Looking for assets throughout the dist directory...
app-1       | + FOUND_ASSETS=0
app-1       | + echo 'Looking for assets throughout the dist directory...'
app-1       | + find dist -name '*.js' -o -name '*.css'
app-1       | + grep -v node_modules
app-1       | + grep -q '[a-zA-Z0-9]\-[a-zA-Z0-9]\+\.'
app-1       | + echo 'Found Vite-generated assets with hash names'
app-1       | Found Vite-generated assets with hash names
app-1       | + FOUND_ASSETS=1
app-1       | + find dist -name '*.js' -o -name '*.css'
app-1       | + grep -v node_modules
app-1       | + grep '[a-zA-Z0-9]\-[a-zA-Z0-9]\+\.'
app-1       | + basename dist/public/assets/index-Bnok1YQN.js
app-1       | Copying dist/public/assets/index-Bnok1YQN.js to dist/public/assets/
app-1       | + FILENAME=index-Bnok1YQN.js
app-1       | + echo 'Copying dist/public/assets/index-Bnok1YQN.js to dist/public/assets/'
app-1       | + cp -f dist/public/assets/index-Bnok1YQN.js dist/public/assets/index-Bnok1YQN.js
app-1       | cp: 'dist/public/assets/index-Bnok1YQN.js' and 'dist/public/assets/index-Bnok1YQN.js' are the same file
app-1       | + echo 'Waiting for PostgreSQL to become available...'
app-1       | + RETRIES=30
app-1       | + pg_isready -h postgres -U trilogy_user -d trilogy_db
app-1       | Waiting for PostgreSQL to become available...
app-1       | postgres:5432 - accepting connections
app-1       | PostgreSQL is ready!
app-1       | Initializing database schema...
app-1       | + '[' 30 -eq 0 ]
app-1       | + echo 'PostgreSQL is ready!'
app-1       | + echo 'Initializing database schema...'
app-1       | + npm run db:push
app-1       |
app-1       | > rest-express@1.0.0 db:push
app-1       | > drizzle-kit push --force --config=./drizzle.config.ts
app-1       |
app-1       | Reading config file '/app/drizzle.config.ts'
app-1       | Using 'pg' driver for database querying
app-1       | [⣷] Pulling schema from database...
[⣯] Pulling schema from database...
[⣟] Pulling schema from database...
[✓] Pulling schema from database...
app-1       | [i] No changes detected
app-1       | + echo 'Database schema initialized successfully!'
app-1       | + echo 'Setting up default users...'
app-1       | + chmod +x docker-setup-users.cjs
app-1       | Database schema initialized successfully!
app-1       | Setting up default users...
app-1       | + node docker-setup-users.cjs
app-1       | Checking for admin user...
app-1       | Admin user already exists
app-1       | Checking for client user...
app-1       | Client user already exists
app-1       | User setup completed successfully
app-1       | + echo 'Examining the build directory structure...'
app-1       | Examining the build directory structure...
app-1       | + find dist/ -type f
app-1       | + sort
app-1       | dist/index.js
app-1       | dist/public/assets/index-BJ3X1Bhi.css
app-1       | dist/public/assets/index-Bnok1YQN.js
app-1       | dist/public/assets/index.css
app-1       | dist/public/assets/index.js
app-1       | dist/public/assets/manifest.json
app-1       | dist/public/assets/trilogy-logo-Caz0jPUL.svg
app-1       | dist/public/config.js
app-1       | dist/public/docker-config.js
app-1       | dist/public/index.html
app-1       | + echo 'Generating dynamic config.js...'
app-1       | Generating dynamic config.js...
app-1       | + cat
app-1       | + mkdir -p dist/public/assets
app-1       | + echo 'Checking for compiled client assets...'
app-1       | + mkdir -p dist/public/assets
app-1       | Checking for compiled client assets...
app-1       | Creating asset manifest...
app-1       | + echo 'Creating asset manifest...'
app-1       | + echo '{"assets":['
app-1       | Looking for assets throughout the dist directory...
app-1       | + FOUND_ASSETS=0
app-1       | + echo 'Looking for assets throughout the dist directory...'
app-1       | + find dist -name '*.js' -o -name '*.css'
app-1       | + grep -v node_modules
app-1       | + grep -q '[a-zA-Z0-9]\-[a-zA-Z0-9]\+\.'
app-1       | + echo 'Found Vite-generated assets with hash names'
app-1       | + FOUND_ASSETS=1
app-1       | Found Vite-generated assets with hash names
app-1       | + find dist -name '*.js' -o -name '*.css'
app-1       | + grep -v node_modules
app-1       | + grep '[a-zA-Z0-9]\-[a-zA-Z0-9]\+\.'
app-1       | + basename dist/public/assets/index-Bnok1YQN.js
app-1       | Copying dist/public/assets/index-Bnok1YQN.js to dist/public/assets/
app-1       | + FILENAME=index-Bnok1YQN.js
app-1       | + echo 'Copying dist/public/assets/index-Bnok1YQN.js to dist/public/assets/'
app-1       | + cp -f dist/public/assets/index-Bnok1YQN.js dist/public/assets/index-Bnok1YQN.js
app-1       | cp: 'dist/public/assets/index-Bnok1YQN.js' and 'dist/public/assets/index-Bnok1YQN.js' are the same file
app-1       | Waiting for PostgreSQL to become available...
app-1       | + echo 'Waiting for PostgreSQL to become available...'
app-1       | + RETRIES=30
app-1       | + pg_isready -h postgres -U trilogy_user -d trilogy_db
app-1       | postgres:5432 - accepting connections
app-1       | PostgreSQL is ready!
app-1       | + '[' 30 -eq 0 ]
app-1       | + echo 'PostgreSQL is ready!'
app-1       | + echo 'Initializing database schema...'
app-1       | + npm run db:push
app-1       | Initializing database schema...
app-1       |
app-1       | > rest-express@1.0.0 db:push
app-1       | > drizzle-kit push --force --config=./drizzle.config.ts
app-1       |
app-1       | Reading config file '/app/drizzle.config.ts'
app-1       | Using 'pg' driver for database querying
app-1       | [⣷] Pulling schema from database...
[⣯] Pulling schema from database...
[⣟] Pulling schema from database...
[✓] Pulling schema from database...
app-1       | [i] No changes detected
app-1       | Database schema initialized successfully!
app-1       | Setting up default users...
app-1       | + echo 'Database schema initialized successfully!'
app-1       | + echo 'Setting up default users...'
app-1       | + chmod +x docker-setup-users.cjs
app-1       | + node docker-setup-users.cjs
app-1       | Checking for admin user...
app-1       | Admin user already exists
app-1       | Checking for client user...
app-1       | Client user already exists
app-1       | User setup completed successfully
app-1       | + echo 'Examining the build directory structure...'
app-1       | Examining the build directory structure...
app-1       | + find dist/ -type f
app-1       | + sort
app-1       | dist/index.js
app-1       | dist/public/assets/index-BJ3X1Bhi.css
app-1       | dist/public/assets/index-Bnok1YQN.js
app-1       | dist/public/assets/index.css
app-1       | dist/public/assets/index.js
app-1       | dist/public/assets/manifest.json
app-1       | dist/public/assets/trilogy-logo-Caz0jPUL.svg
app-1       | dist/public/config.js
app-1       | dist/public/docker-config.js
app-1       | dist/public/index.html
app-1       | + echo 'Generating dynamic config.js...'
app-1       | Generating dynamic config.js...
app-1       | + cat
app-1       | + mkdir -p dist/public/assets
app-1       | Checking for compiled client assets...
app-1       | + echo 'Checking for compiled client assets...'
app-1       | + mkdir -p dist/public/assets
app-1       | + echo 'Creating asset manifest...'
app-1       | Creating asset manifest...
app-1       | + echo '{"assets":['
app-1       | Looking for assets throughout the dist directory...
app-1       | + FOUND_ASSETS=0
app-1       | + echo 'Looking for assets throughout the dist directory...'
app-1       | + find dist -name '*.js' -o -name '*.css'
app-1       | + grep -v node_modules
app-1       | + grep -q '[a-zA-Z0-9]\-[a-zA-Z0-9]\+\.'
app-1       | + echo 'Found Vite-generated assets with hash names'
app-1       | + FOUND_ASSETS=1
app-1       | Found Vite-generated assets with hash names
app-1       | + find dist -name '*.js' -o -name '*.css'
app-1       | + grep '[a-zA-Z0-9]\-[a-zA-Z0-9]\+\.'
app-1       | + grep -v node_modules
app-1       | + basename dist/public/assets/index-Bnok1YQN.js
app-1       | + FILENAME=index-Bnok1YQN.js
app-1       | + echo 'Copying dist/public/assets/index-Bnok1YQN.js to dist/public/assets/'
app-1       | + cp -f dist/public/assets/index-Bnok1YQN.js dist/public/assets/index-Bnok1YQN.js
app-1       | Copying dist/public/assets/index-Bnok1YQN.js to dist/public/assets/
app-1       | cp: 'dist/public/assets/index-Bnok1YQN.js' and 'dist/public/assets/index-Bnok1YQN.js' are the same file
app-1       | + echo 'Waiting for PostgreSQL to become available...'
app-1       | Waiting for PostgreSQL to become available...
app-1       | + RETRIES=30
app-1       | + pg_isready -h postgres -U trilogy_user -d trilogy_db
app-1       | postgres:5432 - accepting connections
app-1       | + '[' 30 -eq 0 ]
app-1       | + echo 'PostgreSQL is ready!'
app-1       | + echo 'Initializing database schema...'
app-1       | + npm run db:push
app-1       | PostgreSQL is ready!
app-1       | Initializing database schema...
app-1       |
app-1       | > rest-express@1.0.0 db:push
app-1       | > drizzle-kit push --force --config=./drizzle.config.ts
app-1       |
app-1       | Reading config file '/app/drizzle.config.ts'
app-1       | Using 'pg' driver for database querying
app-1       | [⣷] Pulling schema from database...
[⣯] Pulling schema from database...
[⣟] Pulling schema from database...
[✓] Pulling schema from database...
app-1       | [i] No changes detected
app-1       | Database schema initialized successfully!
app-1       | Setting up default users...
app-1       | + echo 'Database schema initialized successfully!'
app-1       | + echo 'Setting up default users...'
app-1       | + chmod +x docker-setup-users.cjs
app-1       | + node docker-setup-users.cjs
app-1       | Checking for admin user...
app-1       | Admin user already exists
app-1       | Checking for client user...
app-1       | Client user already exists
app-1       | User setup completed successfully
app-1       | + echo 'Examining the build directory structure...'
app-1       | Examining the build directory structure...
app-1       | + find dist/ -type f
app-1       | + sort
app-1       | dist/index.js
app-1       | dist/public/assets/index-BJ3X1Bhi.css
app-1       | dist/public/assets/index-Bnok1YQN.js
app-1       | dist/public/assets/index.css
app-1       | dist/public/assets/index.js
app-1       | dist/public/assets/manifest.json
app-1       | dist/public/assets/trilogy-logo-Caz0jPUL.svg
app-1       | dist/public/config.js
app-1       | dist/public/docker-config.js
app-1       | dist/public/index.html
app-1       | Generating dynamic config.js...
app-1       | + echo 'Generating dynamic config.js...'
app-1       | + cat
app-1       | + mkdir -p dist/public/assets
app-1       | + echo 'Checking for compiled client assets...'
app-1       | + mkdir -p dist/public/assets
app-1       | Checking for compiled client assets...
app-1       | + echo 'Creating asset manifest...'
app-1       | Creating asset manifest...
app-1       | + echo '{"assets":['
app-1       | + FOUND_ASSETS=0
app-1       | + echo 'Looking for assets throughout the dist directory...'
app-1       | Looking for assets throughout the dist directory...
app-1       | + find dist -name '*.js' -o -name '*.css'
app-1       | + grep -v node_modules
app-1       | + grep -q '[a-zA-Z0-9]\-[a-zA-Z0-9]\+\.'
app-1       | Found Vite-generated assets with hash names
app-1       | + echo 'Found Vite-generated assets with hash names'
app-1       | + FOUND_ASSETS=1
app-1       | + find dist -name '*.js' -o -name '*.css'
app-1       | + grep -v node_modules
app-1       | + grep '[a-zA-Z0-9]\-[a-zA-Z0-9]\+\.'
app-1       | + basename dist/public/assets/index-Bnok1YQN.js
app-1       | + FILENAME=index-Bnok1YQN.js
app-1       | + echo 'Copying dist/public/assets/index-Bnok1YQN.js to dist/public/assets/'
app-1       | + cp -f dist/public/assets/index-Bnok1YQN.js dist/public/assets/index-Bnok1YQN.js
app-1       | Copying dist/public/assets/index-Bnok1YQN.js to dist/public/assets/
app-1       | cp: 'dist/public/assets/index-Bnok1YQN.js' and 'dist/public/assets/index-Bnok1YQN.js' are the same file